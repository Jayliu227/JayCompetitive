Introduction:

1. shortest path: Floyd, Dijstra, Bellman Ford.
2. MST: prim and kruskal.
3. binary search.
4. cross product, line intersection, convex hull.
5. BFS, DFS, hashtable.
6. gcd and lcm.
7. polygon area.
8. qsort.
9. number conversion between two bases.

Intermediate:

1. bipartite graph: maximum matching, perfect matching, and Hungarian algorithm.
2. network flow and minimum flow.
3. segment tree.
4. disjoint set.
5. dp template algorithm.

Tree Variations:
AVL, Red Black Trees, Splay Trees, Fenwick(Binary Indexed Tree), Quad Trees

STL:
partial_sort, partition, lower_bound

1) Graph algorithms: Breadth first search(BFS), Depth first search(DFS), Strongly connected components(SCC), Dijkstra, Floyd-Warshall, Minimum spanning tree(MST), Topological sort.

2) Dynamic programming: Standard dynamic programming problems such as Rod Cutting, Knapsack, Matrix chain multiplication etc.

3) Number theory: Modular arithmetic, Fermat’s theorem, Chinese remainder theorem(CRT), Euclidian method for GCD, Logarithmic Exponentiation, Sieve of Eratosthenes, Euler’s totient function.

3) Greedy: Standard problems such as Activity selection.

4) Search techniques: Binary search, Ternary search and Meet in the middle.

5) Data structures (Basic): Stacks, Queues, Trees and Heaps.

6) Data structures (Advanced): Trie, Segment trees, Fenwick tree or Binary indexed tree(BIT), Disjoint data structures.

7) Strings: Knuth Morris Pratt(KMP), Z algorithm, Suffix arrays/Suffix trees. These are bit advanced algorithms.

8) Computational geometry: Graham-Scan for convex hull, Line sweep.

9) Game theory: Basic principles of Nim game, Grundy numbers, Sprague-Grundy theorem.